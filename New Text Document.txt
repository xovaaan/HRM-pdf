<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HRM 8th Batch PDFs</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&display=swap">
    <link rel="icon" href="pdf.png">
    <style>
        .fonts {
            font-weight: 900;
            font-family: 'Cinzel', sans-serif;
        }

        .open-sans {
            font-weight: 400;
            font-family: 'Open Sans', sans-serif;
        }

        .open-sans-one {
            font-weight: 700;
            font-family: 'Open Sans', sans-serif;
        }

        .button-toggle {
            position: relative;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .button-toggle:hover {
            background-color: #f1f1f1;
        }

        .button-toggle.active {
            background-color: black;
            color: white;
        }

        .button-toggle.active::after {
            content: '';
            position: absolute;
            left: 0;
            top: 100%;
            width: 100%;
            height: 2px;
            background-color: white;
        }

        body.dark {
            background-color: black;
            color: white;
        }

        body.dark .button-toggle:hover {
            background-color: #1a1a1a;
        }

        body.dark .button-toggle.active {
            background-color: green;
        }

        #booksFeatureButton {
            padding: 10px 12px;
            border-radius: 10px;
        }

        #notesFeatureButton {
            padding: 10px 12px;
            border-radius: 10px;
        }

        /* Additional styles for the course page */
        .semester-card {
            cursor: pointer;
        }

        .semester-card:hover {
            background-color: #f1f1f1;
        }

        .semester-card.active {
            background-color: black;
            color: white;
        }

        .semester-card.active::after {
            content: '';
            position: absolute;
            left: 0;
            top: 100%;
            width: 100%;
            height: 2px;
            background-color: white;
        }

        .course-card {
            cursor: pointer;
        }

        .course-card:hover {
            background-color: #f1f1f1;
        }
    </style>
</head>

<body class="bg-gray-200 text-gray-800 dark:text-white">

    <div class="container mx-auto p-4">

        <!-- Header with Logo -->
        <div class="flex items-center justify-between mb-8">
            <a href="index.html"><img src="pdf.png" alt="Your Logo" class="h-12"></a>
            <h1 class="text-2xl sm:text-xl md:text-xl fonts text-green-600 font-semibold">HRM Eighth Batch</h1>
            <div id="darkModeToggle" class="cursor-pointer">
                <img id="lightModeIcon" src="light.png" alt="Light Mode" class="h-8">
                <img id="darkModeIcon" src="dark-mode.png" alt="Dark Mode" class="h-8 hidden">
            </div>
        </div>

        <!-- Books and Notes Feature (Buttons) -->
        <button id="booksFeatureButton" class="button-toggle open-sans cursor-pointer mr-4 mb-5">
            Books
        </button>
        <button id="notesFeatureButton" class="button-toggle open-sans cursor-pointer mr-4 mb-5">
            Notes
        </button>

        <!-- Semester Cards Section (Hidden by default) -->
        <div id="semesterCardsSection" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-4 gap-4 sm:gap-6 md:gap-8 hidden">
            <!-- Semester Card 1 -->
            <div class="bg-white cursor-pointer dark:bg-gray-700 rounded-lg overflow-hidden shadow-lg semester-card">
                <div class="p-4 flex flex-col justify-center items-center">
                    <h2 class="text-lg font-semibold open-sans-one text-gray-900 mb-2 dark:text-black">1st Semester</h2>
                    <button class="bg-green-500 open-sans text-black py-2 px-4 rounded-full download-btn"
                        onclick="showCoursesForSemester(1)">Show Courses</button>
                </div>
            </div>

            <!-- Semester Card 2 -->
            <div class="bg-white cursor-pointer dark:bg-gray-700 rounded-lg overflow-hidden shadow-lg semester-card">
                <div class="p-4 flex flex-col justify-center items-center">
                    <h2 class="text-lg font-semibold open-sans-one text-gray-900 mb-2 dark:text-black">2nd Semester</h2>
                    <button class="bg-green-500 open-sans text-black py-2 px-4 rounded-full download-btn"
                        onclick="showCoursesForSemester(2)">Show Courses</button>
                </div>
            </div>

            <!-- Semester Card 3 (Add more Semester Cards as needed) -->

            <!-- Semester Card 4 -->
            <div class="bg-white cursor-pointer dark:bg-gray-700 rounded-lg overflow-hidden shadow-lg semester-card">
                <div class="p-4 flex flex-col justify-center items-center">
                    <h2 class="text-lg font-semibold open-sans-one text-gray-900 mb-2 dark:text-black">4th Semester</h2>
                    <button class="bg-green-500 open-sans text-black py-2 px-4 rounded-full download-btn"
                        onclick="showCoursesForSemester(4)">Show Courses</button>
                </div>
            </div>
        </div>

        <!-- Courses Section (Hidden by default) -->
        <div id="coursesSection" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4 sm:gap-6 md:gap-8 hidden">
            <!-- ... Courses will be dynamically added here based on the selected semester -->
        </div>

        <!-- Back Button (Hidden by default) -->
        <button id="backButton" class="button-toggle open-sans cursor-pointer hidden" onclick="goBack()">
            Back
        </button>
    </div>

    <script src="script.js"></script>

</body>

</html>
  



document.addEventListener('DOMContentLoaded', () => {
    const darkModeToggle = document.getElementById('darkModeToggle');
    const lightModeIcon = document.getElementById('lightModeIcon');
    const darkModeIcon = document.getElementById('darkModeIcon');
    const booksFeatureButton = document.getElementById('booksFeatureButton');
    const notesFeatureButton = document.getElementById('notesFeatureButton');
    const semesterCardsSection = document.getElementById('semesterCardsSection');
    const coursesSection = document.getElementById('coursesSection');
    const backButton = document.getElementById('backButton');

    // Dark Mode Toggle
    darkModeToggle.addEventListener('click', () => {
        document.body.classList.toggle('dark');
        const isDarkMode = document.body.classList.contains('dark');
        lightModeIcon.classList.toggle('hidden', isDarkMode);
        darkModeIcon.classList.toggle('hidden', !isDarkMode);
    });

    // Function to show the Courses for a specific semester
    window.showCoursesForSemester = (semesterNumber) => {
        semesterCardsSection.classList.add('hidden');
        backButton.classList.remove('hidden');
        coursesSection.innerHTML = ''; // Clear previous content

        // Mock data for courses (replace this with your actual data)
        const coursesData = {
            1: [
                { name: 'Course 1A', link: 'https://example.com/course1A.pdf' },
                { name: 'Course 1B', link: 'https://example.com/course1B.pdf' }
            ],
            2: [
                { name: 'Course 2A', link: 'https://example.com/course2A.pdf' },
                { name: 'Course 2B', link: 'https://example.com/course2B.pdf' }
            ],
            // ... (add data for other semesters as needed)
            4: [
                { name: 'Course 4A', link: 'https://example.com/course4A.pdf' },
                { name: 'Course 4B', link: 'https://example.com/course4B.pdf' },
                { name: 'Course 4C', link: 'https://example.com/course4C.pdf' },
                { name: 'Course 4D', link: 'https://example.com/course4D.pdf' },
                { name: 'Course 4E', link: 'https://example.com/course4E.pdf' }
            ]
        };

        const courses = coursesData[semesterNumber];
        courses.forEach(course => {
            const card = document.createElement('div');
            card.classList.add('bg-white', 'cursor-pointer', 'dark:bg-gray-700', 'rounded-lg', 'overflow-hidden', 'shadow-lg', 'course-card');
            card.innerHTML = `
                <div class="p-4 flex flex-col justify-center items-center">
                    <h2 class="text-lg font-semibold open-sans-one text-gray-900 mb-2 dark:text-black">${course.name}</h2>
                    <button class="bg-green-500 open-sans text-black py-2 px-4 rounded-full download-btn"
                        onclick="showDownloadLink('${course.link}')">Show Download Link</button>
                </div>
            `;
            coursesSection.appendChild(card);
        });
        coursesSection.classList.remove('hidden');
    };

    // Function to go back from Courses to Semester Cards
    window.goBack = () => {
        semesterCardsSection.classList.remove('hidden');
        backButton.classList.add('hidden');
        coursesSection.classList.add('hidden');
    };

    // Function to show the download link for a course
    window.showDownloadLink = (link) => {
        alert(`Download Link: ${link}`);
    };

    // Books and Notes Feature Toggle
    booksFeatureButton.addEventListener('click', () => {
        resetFeatures();
        booksFeatureButton.classList.add('active');
        semesterCardsSection.classList.remove('hidden');
    });

    notesFeatureButton.addEventListener('click', () => {
        resetFeatures();
        notesFeatureButton.classList.add('active');
        semesterCardsSection.classList.remove('hidden');
    });

    // Reset features to default state
    function resetFeatures() {
        booksFeatureButton.classList.remove('active');
        notesFeatureButton.classList.remove('active');
        coursesSection.innerHTML = '';
        semesterCardsSection.classList.add('hidden');
        coursesSection.classList.add('hidden');
        backButton.classList.add('hidden');
    }
});
